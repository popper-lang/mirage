version: '3'

tasks:
  run:
    cmds:
      - sh -c '{{if eq .CLI_ARGS "RELEASE"}} task build_release exec_release  {{end}}'
      - sh -c '{{if eq .CLI_ARGS "DEBUG"}} task build_debug exec_debug {{end}}'
  exec_debug:
    cmds:
      - ./target/debug/mirage
  build_debug:
    cmds:
      - task build_backend_debug build_frontend_debug
      - cargo build

  build_backend_debug:
    cmds:
      - task build_backend_asm_debug build_backend_codegen_debug build_backend_opti_debug
      - cargo build --manifest-path crates/mirage-backend/Cargo.toml

  build_backend_asm_debug:
    cmds:
      - cargo build --manifest-path crates/mirage-backend/mirage-backend-asm/Cargo.toml

  build_backend_codegen_debug:
    cmds:
      - cargo build --manifest-path crates/mirage-backend/mirage-backend-codegen/Cargo.toml
  build_backend_opti_debug:
    cmds:
      - cargo build --manifest-path crates/mirage-backend/mirage-backend-opti/Cargo.toml

  build_frontend_debug:
    cmds:
      - task build_frontend_builder_debug build_frontend_module_debug build_frontend_object_debug
      - cargo build --manifest-path crates/mirage-frontend/Cargo.toml

  build_frontend_builder_debug:
    cmds:
      - cargo build --manifest-path crates/mirage-frontend/mirage-frontend-builder/Cargo.toml

  build_frontend_module_debug:
    cmds:
      - cargo build --manifest-path crates/mirage-frontend/mirage-frontend-module/Cargo.toml

  build_frontend_object_debug:
    cmds:
      - cargo build --manifest-path crates/mirage-frontend/mirage-frontend-object/Cargo.toml

  build_release:
    cmds:
      - task build_backend_release build_frontend_release
      - cargo build --release

  exec_release:
    cmds:
      - ./target/release/mirage

  build_frontend_release:
    cmds:
      - cargo build --manifest-path crates/mirage-frontend/Cargo.toml --release

  build_backend_release:
    cmds:
      - cargo build --manifest-path crates/mirage-backend/Cargo.toml --release

  check:
    cmds:
      - cargo check

  clippy:
    cmds:
      - cargo clippy


  install:
    cmds:
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
      - rustup install nightly
      - rustup default nightly
      - task build

  commit:
    cmds:
      - git add .
      - git commit -m {{.CLI_ARGS}}

  pull:
    cmds:
      - git pull origin main

  push:
    cmds:
      - git push origin main {{.CLI_ARGS}}

  push_force:
    cmds:
      - task push -- --force

  ignore:
    cmds:
      - git rm -r --cached {{.CLI_ARGS}}
      - echo {{.CLI_ARGS}} >> .gitignore
      - task commit -- "Removed {{.CLI_ARGS}} from git repository"

  fmt:
    cmds:
      - task commit -- "Saving before cargo fmt"
      - cargo fmt
      - task check
